// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injectors

import (
	"bmt_showtime_service/db/sqlc"
	"bmt_showtime_service/internal/controllers"
	"bmt_showtime_service/internal/implementaions/cinema"
	"bmt_showtime_service/internal/implementaions/message_broker/readers"
	"bmt_showtime_service/internal/implementaions/nke"
	"bmt_showtime_service/internal/implementaions/redis"
	"bmt_showtime_service/internal/implementaions/showtime"
	"bmt_showtime_service/internal/implementaions/showtime_seat"
	"bmt_showtime_service/internal/injectors/provider"
)

// Injectors from cinema_controller.wire.go:

func InitCinemaController() (*controllers.CinemaController, error) {
	queries := provider.ProvideQueries()
	iRedis := redis.NewRedisClient()
	iCinema := cinema.NewCinemaService(queries, iRedis)
	cinemaController := controllers.NewCinemaController(iCinema)
	return cinemaController, nil
}

// Injectors from message_broker.wire.go:

func InitMessageBroker() (*readers.MessageBrokerReader, error) {
	pool := provider.ProvidePgxPool()
	productClient := provider.ProvideProductClient()
	iStore := sqlc.NewStore(pool, productClient)
	iRedis := redis.NewRedisClient()
	messageBrokerReader := readers.NewMessageBrokerReader(iStore, iRedis)
	return messageBrokerReader, nil
}

// Injectors from nke_impl.wire.go:

func InitNKE() (*nke.NKE, error) {
	pool := provider.ProvidePgxPool()
	productClient := provider.ProvideProductClient()
	iStore := sqlc.NewStore(pool, productClient)
	iRedis := redis.NewRedisClient()
	nkeNKE := nke.NewNKE(iStore, iRedis)
	return nkeNKE, nil
}

// Injectors from showtime_controller.wire.go:

func InitShowtimeController() (*controllers.ShowtimeController, error) {
	pool := provider.ProvidePgxPool()
	productClient := provider.ProvideProductClient()
	iStore := sqlc.NewStore(pool, productClient)
	iRedis := redis.NewRedisClient()
	iShowtime := showtime.NewShowtimeService(iStore, iRedis, productClient)
	showtimeController := controllers.NewShowtimeController(iShowtime)
	return showtimeController, nil
}

// Injectors from showtime_seat_controller.wire.go:

func InitShowtimeSeatController() (*controllers.ShowtimeSeatController, error) {
	pool := provider.ProvidePgxPool()
	productClient := provider.ProvideProductClient()
	iStore := sqlc.NewStore(pool, productClient)
	iRedis := redis.NewRedisClient()
	iShowtimeSeat := showtimeseat.NewShowtimeSeatService(iStore, iRedis)
	showtimeSeatController := controllers.NewShowtimeSeatController(iShowtimeSeat)
	return showtimeSeatController, nil
}
